//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "tbl_pdf_article_access_log")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub pdf_article_id: i32,
    pub src_ip: String,
    pub user_agent: String,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::tbl_pdf_article::Entity",
        from = "Column::PdfArticleId",
        to = "super::tbl_pdf_article::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    TblPdfArticle,
}

impl Related<super::tbl_pdf_article::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TblPdfArticle.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
